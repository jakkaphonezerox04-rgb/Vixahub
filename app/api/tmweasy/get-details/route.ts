import { NextRequest, NextResponse } from 'next/server';

// TMWEasy API Configuration
const TMWEASY_CONFIG = {
  api_url: "https://www.tmweasy.com/apipp.php",
  username: "jakkaphonezerox04",
  password: "oam0967788993",
  con_id: "108443",
  promptpay_id: "0959836162", // ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡∏à‡∏≤‡∏Å config.php
  promptpay_name: "‡∏ò‡∏ô‡πÄ‡∏ó‡∏û ‡πÇ‡∏™‡∏†‡∏≤‡∏Ñ‡∏≥", // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ
  type: "01" // 01=‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£, 02=‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£ ‡∏õ‡∏ä‡∏ä
};

interface GetDetailsRequest {
  id_pay: string;
}

export async function POST(request: NextRequest) {
  try {
    console.log("üîç TMWEasy Get Details API called");

    const body: GetDetailsRequest = await request.json();
    const { id_pay } = body;

    console.log("üì• Get details request:", body);

    // Validate required fields
    if (!id_pay) {
      return NextResponse.json(
        { 
          success: false, 
          error: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á id_pay" 
        },
        { status: 400 }
      );
    }

    // Build API parameters according to TMWEasy documentation
    const params = new URLSearchParams({
      username: TMWEASY_CONFIG.username,
      password: TMWEASY_CONFIG.password,
      con_id: TMWEASY_CONFIG.con_id,
      id_pay: id_pay,
      promptpay_id: TMWEASY_CONFIG.promptpay_id,
      type: TMWEASY_CONFIG.type,
      method: "detail_pay"
    });

    const apiUrl = `${TMWEASY_CONFIG.api_url}?${params.toString()}`;

    console.log("üîó TMWEasy API call:", {
      url: TMWEASY_CONFIG.api_url,
      id_pay,
      promptpay_id: TMWEASY_CONFIG.promptpay_id,
      type: TMWEASY_CONFIG.type
    });

    // Call TMWEasy API
    const response = await fetch(apiUrl, {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'User-Agent': 'VIXAHUB-TMWEasy/1.0'
      }
    });

    if (!response.ok) {
      throw new Error(`TMWEasy API HTTP ${response.status}: ${response.statusText}`);
    }

    const responseText = await response.text();
    console.log("üì• TMWEasy Get Details Response:", responseText);

    try {
      const result = JSON.parse(responseText);
      
      console.log("üìä Get details result:", result);

      if (result.status === 1) {
        console.log("‚úÖ Payment details retrieved successfully");
        
        return NextResponse.json({
          success: true,
          data: {
            status: result.status,
            ref1: result.ref1,
            amount_check: result.amount_check, // ‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÇ‡∏≠‡∏ô ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô ‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå
            qr_image_base64: result.qr_image_base64,
            msg: result.msg,
            time_out: result.time_out // ‡πÄ‡∏ß‡∏•‡∏≤‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞ ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
          }
        });
      } else {
        console.log("‚ùå Failed to get payment details:", result.msg);
        
        return NextResponse.json({
          success: false,
          error: result.msg || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ",
          data: result
        }, { status: 400 });
      }

    } catch (parseError) {
      console.error("‚ùå Failed to parse JSON response:", parseError);
      return NextResponse.json(
        { 
          success: false, 
          error: "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å TMWEasy API ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
          raw_response: responseText
        },
        { status: 500 }
      );
    }

  } catch (error) {
    console.error("‚ùå TMWEasy get details error:", error);
    return NextResponse.json(
      { 
        success: false, 
        error: error instanceof Error ? error.message : "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á" 
      },
      { status: 500 }
    );
  }
} 